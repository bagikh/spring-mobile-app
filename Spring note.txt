@RestController:
 - Register the class as REST controller and enable receive/send http request/response
 
@RequestMapping:
 - Mapping user request. For example ("users") means bind this class to http://localhost:8080/users
 
@GetMapping:
 - Bind GET request with following function
 - For example:
		public String getUser() {
			return "get user was called";
		}
		
 - User request: http://localhost:8080/users ---> return: get user was called
	
@GetMapping(path="/{userId}")
 - Bind GET request with specific path
 - For example:
		@GetMapping(path="/{userId}")
		public String getUser(@PathVariable String userId) {
			return "get user was called " + userId ;
		}
 - User request: http://localhost:8080/users/1 ---> return: get user was called 1
 
@GetMapping
 - Bind GET request with query string
 - For example:
		public String getUsers(@RequestParam(value="page")int page, 
			@RequestParam(value="limit") int limit) {
		return "get user was called with page="+page+"limit="+limit ;
	}
 - User request: http://localhost:8080/users?page=1&limit=2 ---> return: "get user was called with page=1 limit=2
 
 
 @GetMapping
 - Bind GET request with Query string and DEFAULT VALUE
 - For example:
		public String getUsers(@RequestParam(value="page", defaultValue="1")int page, 
			@RequestParam(value="limit", defaultValue="50") int limit) {
		return "get user was called with page="+page+"limit="+limit ;
	}
 - User request: http://localhost:8080/users?page=1 ---> return: "get user was called with page=1 limit=50


@GetMapping
 - Bind GET request with Query string and DEFAULT VALUE NOT REQURED (ONLY work with DECLARING AS String)
 - For example:
	public String getUsers(@RequestParam(value="page", defaultValue="1")int page, 
			@RequestParam(value="limit", defaultValue="50") int limit,
			@RequestParam(value="sort", required=false) String sort) {
		return "get user was called with page="+page+"limit="+limit+"sort"+sort ;
	}
	
	- User request: http://localhost:8080/users?page=1 ---> return: "get user was called with page=1 limit=50 sort=null
	
	
@GetMapping(path="/{userId}", produces= {
			MediaType.APPLICATION_JSON_VALUE,
			MediaType.APPLICATION_XML_VALUE
			})
			
 - Bind GET request. Respond to user request as JSON or XML format
 - For example:
		public UserRest getUser(@PathVariable String userId) {
			UserRest returnValue = new UserRest();
			returnValue.setEmail("test@email.com");
			returnValue.setFirstName("Bagi");
			returnValue.setLastName("Kh");
			
			return returnValue ;
		}
		
	- - User request: http://localhost:8080/users/1 ---> return: 
			<UserRest>
				<firstName>Bagi</firstName>
				<lastName>Kh</lastName>
				<email>test@email.com</email>
				<userId/>
			</UserRest>